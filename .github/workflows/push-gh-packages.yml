name: Build & publish docker images
on:
  pull_request:
    types: [opened,synchronize]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_COMMIT: ${{ github.sha }}

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      artifacts: ${{ steps.output_step.outputs.artifacts }}
    steps: 
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.0'
    - name: Run Script
      id: get-matrix
      shell: python
      run: |
        import json
        import subprocess
        import os
        def folder_contains_dockerfile(folder_path):
            try:
                return "Dockerfile" in os.listdir(folder_path)
            except FileNotFoundError:
                print(f"Folder not found: {folder_path}")
                return False
            
        commit_hash=os.environ['GITHUB_COMMIT']
        full_command=f"git diff-tree --no-commit-id --diff-filter=M --name-only -r {commit_hash} | while read f; do dirname \"$f\"; done | sort -u"
        try:
            modified_dirs = subprocess.run(full_command, shell=True, capture_output=True, text=True).stdout.strip().splitlines()
        except subprocess.CalledProcessError:
            print("Failed to execute command")
            modified_dirs = []

        #modified_dirs = get_directories(commit_hash).stdout.strip().splitlines()
        for dir in modified_dirs:
            if not folder_contains_dockerfile(dir):
                modified_dirs.remove(dir)
        json_data = json.dumps(modified_dirs)
        print(json_data)

        with open(os.environ['GITHUB_OUTPUT'],'a') as fh:
            #json.dump(modified_dirs, f, indent=4)
            print(f'artifacts={json_data}', file=fh)
        gh_output=os.environ['GITHUB_OUTPUT']
        print(gh_output)
    #  run: python build-support/create-matrix.py
    #- name: Output JSON
    #  run: |
    #    echo "artifacts=$(cat output.json)" >> $GITHUB_OUTPUT
    #  id: output_step
    #- name: Debug
    #  run: cat output.json && git version && echo "${GITHUB_COMMIT}"

  build-and-push-image:
    needs: detect_changes
    strategy:
      fail-fast: false
      matrix:
        artifact: ${{ fromJSON(needs.detect_changes.outputs.artifacts) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PACKAGE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/uliseslarraga/open-telemetry-demo/${{ matrix.artifact }}

      - name: Build and push Docker image Demo
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./${{ matrix.artifact }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}