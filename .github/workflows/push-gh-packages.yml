name: Build & publish docker images
on:
  pull_request:
    types: [opened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.output_step.outputs.result }}
    steps: 
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Run Script
      run: python build-support/create-matrix.py
    - name: Output JSON
      run: |
        echo "matrix=$(cat output.json)" >> $GITHUB_OUTPUT
      id: output_step

  build-and-push-image:
    needs: detect_changes
    strategy:
      fail-fast: false
      matrix:
        artifacts: ${{ fromJSON(needs.detect_changes.outputs.matrix) }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PACKAGE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/uliseslarraga/open-telemetry-demo/${{ matrix.node }}

      - name: Build and push Docker image Demo
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./${{ matrix.node }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}